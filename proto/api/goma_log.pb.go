// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/goma_log.proto

package devtools_goma

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecLog_AuthenticationType int32

const (
	ExecLog_NONE    ExecLog_AuthenticationType = 0
	ExecLog_UNKNOWN ExecLog_AuthenticationType = 1
	// reserved 2,3
	ExecLog_OAUTH2_UNSPEC              ExecLog_AuthenticationType = 4
	ExecLog_OAUTH2_APPLICATION         ExecLog_AuthenticationType = 5
	ExecLog_OAUTH2_SERVICE_ACCOUNT     ExecLog_AuthenticationType = 6
	ExecLog_OAUTH2_GCE_SERVICE_ACCOUNT ExecLog_AuthenticationType = 7
	ExecLog_OAUTH2_LUCI_LOCAL_AUTH     ExecLog_AuthenticationType = 8
)

var ExecLog_AuthenticationType_name = map[int32]string{
	0: "NONE",
	1: "UNKNOWN",
	4: "OAUTH2_UNSPEC",
	5: "OAUTH2_APPLICATION",
	6: "OAUTH2_SERVICE_ACCOUNT",
	7: "OAUTH2_GCE_SERVICE_ACCOUNT",
	8: "OAUTH2_LUCI_LOCAL_AUTH",
}

var ExecLog_AuthenticationType_value = map[string]int32{
	"NONE":                       0,
	"UNKNOWN":                    1,
	"OAUTH2_UNSPEC":              4,
	"OAUTH2_APPLICATION":         5,
	"OAUTH2_SERVICE_ACCOUNT":     6,
	"OAUTH2_GCE_SERVICE_ACCOUNT": 7,
	"OAUTH2_LUCI_LOCAL_AUTH":     8,
}

func (x ExecLog_AuthenticationType) Enum() *ExecLog_AuthenticationType {
	p := new(ExecLog_AuthenticationType)
	*p = x
	return p
}

func (x ExecLog_AuthenticationType) String() string {
	return proto.EnumName(ExecLog_AuthenticationType_name, int32(x))
}

func (x *ExecLog_AuthenticationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExecLog_AuthenticationType_value, data, "ExecLog_AuthenticationType")
	if err != nil {
		return err
	}
	*x = ExecLog_AuthenticationType(value)
	return nil
}

func (ExecLog_AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{0, 0}
}

type ExecLog_NetworkFailureType int32

const (
	ExecLog_NO_NETWORK_ERROR      ExecLog_NetworkFailureType = 0
	ExecLog_DISABLED              ExecLog_NetworkFailureType = 1
	ExecLog_UNKNOWN_NETWORK_ERROR ExecLog_NetworkFailureType = 2
	ExecLog_CONNECT_FAILED        ExecLog_NetworkFailureType = 3
	ExecLog_SEND_FAILED           ExecLog_NetworkFailureType = 4
	ExecLog_TIMEDOUT_AFTER_SEND   ExecLog_NetworkFailureType = 5
	ExecLog_RECEIVE_FAILED        ExecLog_NetworkFailureType = 6
	ExecLog_BAD_HTTP_STATUS_CODE  ExecLog_NetworkFailureType = 7
)

var ExecLog_NetworkFailureType_name = map[int32]string{
	0: "NO_NETWORK_ERROR",
	1: "DISABLED",
	2: "UNKNOWN_NETWORK_ERROR",
	3: "CONNECT_FAILED",
	4: "SEND_FAILED",
	5: "TIMEDOUT_AFTER_SEND",
	6: "RECEIVE_FAILED",
	7: "BAD_HTTP_STATUS_CODE",
}

var ExecLog_NetworkFailureType_value = map[string]int32{
	"NO_NETWORK_ERROR":      0,
	"DISABLED":              1,
	"UNKNOWN_NETWORK_ERROR": 2,
	"CONNECT_FAILED":        3,
	"SEND_FAILED":           4,
	"TIMEDOUT_AFTER_SEND":   5,
	"RECEIVE_FAILED":        6,
	"BAD_HTTP_STATUS_CODE":  7,
}

func (x ExecLog_NetworkFailureType) Enum() *ExecLog_NetworkFailureType {
	p := new(ExecLog_NetworkFailureType)
	*p = x
	return p
}

func (x ExecLog_NetworkFailureType) String() string {
	return proto.EnumName(ExecLog_NetworkFailureType_name, int32(x))
}

func (x *ExecLog_NetworkFailureType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExecLog_NetworkFailureType_value, data, "ExecLog_NetworkFailureType")
	if err != nil {
		return err
	}
	*x = ExecLog_NetworkFailureType(value)
	return nil
}

func (ExecLog_NetworkFailureType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{0, 1}
}

type ExecLog_CacheSource int32

const (
	ExecLog_UNKNOWN_CACHE      ExecLog_CacheSource = 0
	ExecLog_MEM_CACHE          ExecLog_CacheSource = 1
	ExecLog_STORAGE_CACHE      ExecLog_CacheSource = 2
	ExecLog_LOCAL_OUTPUT_CACHE ExecLog_CacheSource = 3
)

var ExecLog_CacheSource_name = map[int32]string{
	0: "UNKNOWN_CACHE",
	1: "MEM_CACHE",
	2: "STORAGE_CACHE",
	3: "LOCAL_OUTPUT_CACHE",
}

var ExecLog_CacheSource_value = map[string]int32{
	"UNKNOWN_CACHE":      0,
	"MEM_CACHE":          1,
	"STORAGE_CACHE":      2,
	"LOCAL_OUTPUT_CACHE": 3,
}

func (x ExecLog_CacheSource) Enum() *ExecLog_CacheSource {
	p := new(ExecLog_CacheSource)
	*p = x
	return p
}

func (x ExecLog_CacheSource) String() string {
	return proto.EnumName(ExecLog_CacheSource_name, int32(x))
}

func (x *ExecLog_CacheSource) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExecLog_CacheSource_value, data, "ExecLog_CacheSource")
	if err != nil {
		return err
	}
	*x = ExecLog_CacheSource(value)
	return nil
}

func (ExecLog_CacheSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{0, 2}
}

// NEXT ID TO USE: 92
type ExecLog struct {
	// optional string compiler_proxy_id = 1;
	Username               *string `protobuf:"bytes,46,opt,name=username" json:"username,omitempty"`
	Nodename               *string `protobuf:"bytes,47,opt,name=nodename" json:"nodename,omitempty"`
	Port                   *int32  `protobuf:"varint,48,opt,name=port" json:"port,omitempty"`
	CompilerProxyStartTime *int32  `protobuf:"varint,49,opt,name=compiler_proxy_start_time,json=compilerProxyStartTime" json:"compiler_proxy_start_time,omitempty"`
	TaskId                 *int32  `protobuf:"varint,50,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	BuildId                *string `protobuf:"bytes,91,opt,name=build_id,json=buildId" json:"build_id,omitempty"`
	CompilerProxyUserAgent *string `protobuf:"bytes,51,opt,name=compiler_proxy_user_agent,json=compilerProxyUserAgent" json:"compiler_proxy_user_agent,omitempty"`
	// request info.
	StartTime   *int32   `protobuf:"varint,2,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	Arg         []string `protobuf:"bytes,3,rep,name=arg" json:"arg,omitempty"`
	Env         []string `protobuf:"bytes,4,rep,name=env" json:"env,omitempty"`
	Cwd         *string  `protobuf:"bytes,5,opt,name=cwd" json:"cwd,omitempty"`
	ExpandedArg []string `protobuf:"bytes,62,rep,name=expanded_arg,json=expandedArg" json:"expanded_arg,omitempty"`
	// command spec
	CommandVersion      *string                     `protobuf:"bytes,71,opt,name=command_version,json=commandVersion" json:"command_version,omitempty"`
	CommandTarget       *string                     `protobuf:"bytes,72,opt,name=command_target,json=commandTarget" json:"command_target,omitempty"`
	LatestInputFilename *string                     `protobuf:"bytes,59,opt,name=latest_input_filename,json=latestInputFilename" json:"latest_input_filename,omitempty"`
	LatestInputMtime    *int32                      `protobuf:"varint,60,opt,name=latest_input_mtime,json=latestInputMtime" json:"latest_input_mtime,omitempty"`
	UseSsl              *bool                       `protobuf:"varint,64,opt,name=use_ssl,json=useSsl" json:"use_ssl,omitempty"`
	AuthType            *ExecLog_AuthenticationType `protobuf:"varint,86,opt,name=auth_type,json=authType,enum=devtools_goma.ExecLog_AuthenticationType,def=0" json:"auth_type,omitempty"`
	CpuFeatures         *CpuFeatures                `protobuf:"bytes,87,opt,name=cpu_features,json=cpuFeatures" json:"cpu_features,omitempty"`
	NetworkFailureType  *ExecLog_NetworkFailureType `protobuf:"varint,88,opt,name=network_failure_type,json=networkFailureType,enum=devtools_goma.ExecLog_NetworkFailureType,def=0" json:"network_failure_type,omitempty"`
	OsInfo              *OSInfo                     `protobuf:"bytes,89,opt,name=os_info,json=osInfo" json:"os_info,omitempty"`
	// in INIT.
	PendingTime *int32 `protobuf:"varint,63,opt,name=pending_time,json=pendingTime" json:"pending_time,omitempty"`
	// in SETUP.
	CompilerInfoProcessTime *int32 `protobuf:"varint,82,opt,name=compiler_info_process_time,json=compilerInfoProcessTime" json:"compiler_info_process_time,omitempty"`
	// include_preprocess_time is sum of
	// include_processor_wait_time and include_processor_run_time.
	IncludePreprocessTime         *int32 `protobuf:"varint,6,opt,name=include_preprocess_time,json=includePreprocessTime" json:"include_preprocess_time,omitempty"`
	IncludeProcessorWaitTime      *int32 `protobuf:"varint,84,opt,name=include_processor_wait_time,json=includeProcessorWaitTime" json:"include_processor_wait_time,omitempty"`
	IncludeProcessorRunTime       *int32 `protobuf:"varint,85,opt,name=include_processor_run_time,json=includeProcessorRunTime" json:"include_processor_run_time,omitempty"`
	DepscacheUsed                 *bool  `protobuf:"varint,78,opt,name=depscache_used,json=depscacheUsed" json:"depscache_used,omitempty"`
	IncludePreprocessTotalFiles   *int32 `protobuf:"varint,79,opt,name=include_preprocess_total_files,json=includePreprocessTotalFiles" json:"include_preprocess_total_files,omitempty"`
	IncludePreprocessSkippedFiles *int32 `protobuf:"varint,80,opt,name=include_preprocess_skipped_files,json=includePreprocessSkippedFiles" json:"include_preprocess_skipped_files,omitempty"`
	// in FILE_REQ.
	IncludeFileloadTime        *int32  `protobuf:"varint,7,opt,name=include_fileload_time,json=includeFileloadTime" json:"include_fileload_time,omitempty"`
	IncludeFileloadPendingTime []int32 `protobuf:"varint,69,rep,name=include_fileload_pending_time,json=includeFileloadPendingTime" json:"include_fileload_pending_time,omitempty"`
	IncludeFileloadRunTime     []int32 `protobuf:"varint,70,rep,name=include_fileload_run_time,json=includeFileloadRunTime" json:"include_fileload_run_time,omitempty"`
	NumTotalInputFile          *int32  `protobuf:"varint,8,opt,name=num_total_input_file,json=numTotalInputFile" json:"num_total_input_file,omitempty"`
	// repeated by retry.
	NumUploadingInputFile            []int32 `protobuf:"varint,9,rep,name=num_uploading_input_file,json=numUploadingInputFile" json:"num_uploading_input_file,omitempty"`
	NumMissingInputFile              []int32 `protobuf:"varint,10,rep,name=num_missing_input_file,json=numMissingInputFile" json:"num_missing_input_file,omitempty"`
	NumFileUploadedDuringExecFailure []int32 `protobuf:"varint,66,rep,name=num_file_uploaded_during_exec_failure,json=numFileUploadedDuringExecFailure" json:"num_file_uploaded_during_exec_failure,omitempty"`
	// repeated by each input file.
	InputFileTime []int32 `protobuf:"varint,11,rep,name=input_file_time,json=inputFileTime" json:"input_file_time,omitempty"`
	InputFileSize []int32 `protobuf:"varint,12,rep,name=input_file_size,json=inputFileSize" json:"input_file_size,omitempty"`
	// in CALL_EXEC.  repeated by retry.
	RpcCallTime      []int32  `protobuf:"varint,13,rep,name=rpc_call_time,json=rpcCallTime" json:"rpc_call_time,omitempty"`
	RpcReqSize       []int32  `protobuf:"varint,14,rep,name=rpc_req_size,json=rpcReqSize" json:"rpc_req_size,omitempty"`
	RpcRespSize      []int32  `protobuf:"varint,15,rep,name=rpc_resp_size,json=rpcRespSize" json:"rpc_resp_size,omitempty"`
	RpcRawReqSize    []int32  `protobuf:"varint,16,rep,name=rpc_raw_req_size,json=rpcRawReqSize" json:"rpc_raw_req_size,omitempty"`
	RpcRawRespSize   []int32  `protobuf:"varint,17,rep,name=rpc_raw_resp_size,json=rpcRawRespSize" json:"rpc_raw_resp_size,omitempty"`
	RpcMasterTraceId []string `protobuf:"bytes,58,rep,name=rpc_master_trace_id,json=rpcMasterTraceId" json:"rpc_master_trace_id,omitempty"`
	RpcThrottleTime  []int32  `protobuf:"varint,67,rep,name=rpc_throttle_time,json=rpcThrottleTime" json:"rpc_throttle_time,omitempty"`
	RpcPendingTime   []int32  `protobuf:"varint,57,rep,name=rpc_pending_time,json=rpcPendingTime" json:"rpc_pending_time,omitempty"`
	RpcReqBuildTime  []int32  `protobuf:"varint,18,rep,name=rpc_req_build_time,json=rpcReqBuildTime" json:"rpc_req_build_time,omitempty"`
	RpcReqSendTime   []int32  `protobuf:"varint,19,rep,name=rpc_req_send_time,json=rpcReqSendTime" json:"rpc_req_send_time,omitempty"`
	RpcWaitTime      []int32  `protobuf:"varint,20,rep,name=rpc_wait_time,json=rpcWaitTime" json:"rpc_wait_time,omitempty"`
	RpcRespRecvTime  []int32  `protobuf:"varint,21,rep,name=rpc_resp_recv_time,json=rpcRespRecvTime" json:"rpc_resp_recv_time,omitempty"`
	RpcRespParseTime []int32  `protobuf:"varint,22,rep,name=rpc_resp_parse_time,json=rpcRespParseTime" json:"rpc_resp_parse_time,omitempty"`
	// in FILE_RESP.
	FileResponseTime *int32 `protobuf:"varint,32,opt,name=file_response_time,json=fileResponseTime" json:"file_response_time,omitempty"`
	NumOutputFile    *int32 `protobuf:"varint,33,opt,name=num_output_file,json=numOutputFile" json:"num_output_file,omitempty"`
	// repeated by each output file
	OutputFileTime []int32 `protobuf:"varint,34,rep,name=output_file_time,json=outputFileTime" json:"output_file_time,omitempty"`
	OutputFileSize []int32 `protobuf:"varint,35,rep,name=output_file_size,json=outputFileSize" json:"output_file_size,omitempty"`
	ChunkRespSize  []int32 `protobuf:"varint,36,rep,name=chunk_resp_size,json=chunkRespSize" json:"chunk_resp_size,omitempty"`
	// Total time elapsed for handling the request in compiler_proxy.
	HandlerTime *int32 `protobuf:"varint,37,opt,name=handler_time,json=handlerTime" json:"handler_time,omitempty"`
	// result info
	ExecCommandNotFound            *string  `protobuf:"bytes,76,opt,name=exec_command_not_found,json=execCommandNotFound" json:"exec_command_not_found,omitempty"`
	ExecCommandNameMismatch        *string  `protobuf:"bytes,73,opt,name=exec_command_name_mismatch,json=execCommandNameMismatch" json:"exec_command_name_mismatch,omitempty"`
	ExecCommandTargetMismatch      *string  `protobuf:"bytes,74,opt,name=exec_command_target_mismatch,json=execCommandTargetMismatch" json:"exec_command_target_mismatch,omitempty"`
	ExecCommandVersionMismatch     *string  `protobuf:"bytes,38,opt,name=exec_command_version_mismatch,json=execCommandVersionMismatch" json:"exec_command_version_mismatch,omitempty"`
	ExecCommandBinaryHashMismatch  *string  `protobuf:"bytes,39,opt,name=exec_command_binary_hash_mismatch,json=execCommandBinaryHashMismatch" json:"exec_command_binary_hash_mismatch,omitempty"`
	ExecCommandSubprogramsMismatch *string  `protobuf:"bytes,75,opt,name=exec_command_subprograms_mismatch,json=execCommandSubprogramsMismatch" json:"exec_command_subprograms_mismatch,omitempty"`
	ExecExitStatus                 *int32   `protobuf:"varint,40,opt,name=exec_exit_status,json=execExitStatus" json:"exec_exit_status,omitempty"`
	ExecRequestRetry               *int32   `protobuf:"varint,41,opt,name=exec_request_retry,json=execRequestRetry" json:"exec_request_retry,omitempty"`
	ExecRequestRetryReason         []string `protobuf:"bytes,56,rep,name=exec_request_retry_reason,json=execRequestRetryReason" json:"exec_request_retry_reason,omitempty"`
	// local run
	LocalRunReason   *string `protobuf:"bytes,42,opt,name=local_run_reason,json=localRunReason" json:"local_run_reason,omitempty"`
	LocalPendingTime *int32  `protobuf:"varint,43,opt,name=local_pending_time,json=localPendingTime" json:"local_pending_time,omitempty"`
	LocalRunTime     *int32  `protobuf:"varint,44,opt,name=local_run_time,json=localRunTime" json:"local_run_time,omitempty"`
	// TODO: use int32?
	LocalMemKb          *int64  `protobuf:"varint,52,opt,name=local_mem_kb,json=localMemKb" json:"local_mem_kb,omitempty"`
	LocalOutputFileTime []int32 `protobuf:"varint,54,rep,name=local_output_file_time,json=localOutputFileTime" json:"local_output_file_time,omitempty"`
	// TODO: use int64?
	LocalOutputFileSize []int32              `protobuf:"varint,55,rep,name=local_output_file_size,json=localOutputFileSize" json:"local_output_file_size,omitempty"`
	LocalDelayTime      *int32               `protobuf:"varint,61,opt,name=local_delay_time,json=localDelayTime" json:"local_delay_time,omitempty"`
	CacheHit            *bool                `protobuf:"varint,45,opt,name=cache_hit,json=cacheHit" json:"cache_hit,omitempty"`
	CacheSource         *ExecLog_CacheSource `protobuf:"varint,90,opt,name=cache_source,json=cacheSource,enum=devtools_goma.ExecLog_CacheSource" json:"cache_source,omitempty"`
	// goma_error indicates result mismatch (exit status, stdout, stderr) between
	// local and remote.
	GomaError *bool `protobuf:"varint,53,opt,name=goma_error,json=gomaError" json:"goma_error,omitempty"`
	// compiler_proxy_error indicates it replied failure exit status to gomacc
	// while remote/local compilation have succeeded.
	// so not genuie compilation failure.
	CompilerProxyError   *bool    `protobuf:"varint,77,opt,name=compiler_proxy_error,json=compilerProxyError" json:"compiler_proxy_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecLog) Reset()         { *m = ExecLog{} }
func (m *ExecLog) String() string { return proto.CompactTextString(m) }
func (*ExecLog) ProtoMessage()    {}
func (*ExecLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{0}
}

func (m *ExecLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecLog.Unmarshal(m, b)
}
func (m *ExecLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecLog.Marshal(b, m, deterministic)
}
func (m *ExecLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecLog.Merge(m, src)
}
func (m *ExecLog) XXX_Size() int {
	return xxx_messageInfo_ExecLog.Size(m)
}
func (m *ExecLog) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecLog.DiscardUnknown(m)
}

var xxx_messageInfo_ExecLog proto.InternalMessageInfo

const Default_ExecLog_AuthType ExecLog_AuthenticationType = ExecLog_NONE
const Default_ExecLog_NetworkFailureType ExecLog_NetworkFailureType = ExecLog_NO_NETWORK_ERROR

func (m *ExecLog) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *ExecLog) GetNodename() string {
	if m != nil && m.Nodename != nil {
		return *m.Nodename
	}
	return ""
}

func (m *ExecLog) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ExecLog) GetCompilerProxyStartTime() int32 {
	if m != nil && m.CompilerProxyStartTime != nil {
		return *m.CompilerProxyStartTime
	}
	return 0
}

func (m *ExecLog) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *ExecLog) GetBuildId() string {
	if m != nil && m.BuildId != nil {
		return *m.BuildId
	}
	return ""
}

func (m *ExecLog) GetCompilerProxyUserAgent() string {
	if m != nil && m.CompilerProxyUserAgent != nil {
		return *m.CompilerProxyUserAgent
	}
	return ""
}

func (m *ExecLog) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ExecLog) GetArg() []string {
	if m != nil {
		return m.Arg
	}
	return nil
}

func (m *ExecLog) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *ExecLog) GetCwd() string {
	if m != nil && m.Cwd != nil {
		return *m.Cwd
	}
	return ""
}

func (m *ExecLog) GetExpandedArg() []string {
	if m != nil {
		return m.ExpandedArg
	}
	return nil
}

func (m *ExecLog) GetCommandVersion() string {
	if m != nil && m.CommandVersion != nil {
		return *m.CommandVersion
	}
	return ""
}

func (m *ExecLog) GetCommandTarget() string {
	if m != nil && m.CommandTarget != nil {
		return *m.CommandTarget
	}
	return ""
}

func (m *ExecLog) GetLatestInputFilename() string {
	if m != nil && m.LatestInputFilename != nil {
		return *m.LatestInputFilename
	}
	return ""
}

func (m *ExecLog) GetLatestInputMtime() int32 {
	if m != nil && m.LatestInputMtime != nil {
		return *m.LatestInputMtime
	}
	return 0
}

func (m *ExecLog) GetUseSsl() bool {
	if m != nil && m.UseSsl != nil {
		return *m.UseSsl
	}
	return false
}

func (m *ExecLog) GetAuthType() ExecLog_AuthenticationType {
	if m != nil && m.AuthType != nil {
		return *m.AuthType
	}
	return Default_ExecLog_AuthType
}

func (m *ExecLog) GetCpuFeatures() *CpuFeatures {
	if m != nil {
		return m.CpuFeatures
	}
	return nil
}

func (m *ExecLog) GetNetworkFailureType() ExecLog_NetworkFailureType {
	if m != nil && m.NetworkFailureType != nil {
		return *m.NetworkFailureType
	}
	return Default_ExecLog_NetworkFailureType
}

func (m *ExecLog) GetOsInfo() *OSInfo {
	if m != nil {
		return m.OsInfo
	}
	return nil
}

func (m *ExecLog) GetPendingTime() int32 {
	if m != nil && m.PendingTime != nil {
		return *m.PendingTime
	}
	return 0
}

func (m *ExecLog) GetCompilerInfoProcessTime() int32 {
	if m != nil && m.CompilerInfoProcessTime != nil {
		return *m.CompilerInfoProcessTime
	}
	return 0
}

func (m *ExecLog) GetIncludePreprocessTime() int32 {
	if m != nil && m.IncludePreprocessTime != nil {
		return *m.IncludePreprocessTime
	}
	return 0
}

func (m *ExecLog) GetIncludeProcessorWaitTime() int32 {
	if m != nil && m.IncludeProcessorWaitTime != nil {
		return *m.IncludeProcessorWaitTime
	}
	return 0
}

func (m *ExecLog) GetIncludeProcessorRunTime() int32 {
	if m != nil && m.IncludeProcessorRunTime != nil {
		return *m.IncludeProcessorRunTime
	}
	return 0
}

func (m *ExecLog) GetDepscacheUsed() bool {
	if m != nil && m.DepscacheUsed != nil {
		return *m.DepscacheUsed
	}
	return false
}

func (m *ExecLog) GetIncludePreprocessTotalFiles() int32 {
	if m != nil && m.IncludePreprocessTotalFiles != nil {
		return *m.IncludePreprocessTotalFiles
	}
	return 0
}

func (m *ExecLog) GetIncludePreprocessSkippedFiles() int32 {
	if m != nil && m.IncludePreprocessSkippedFiles != nil {
		return *m.IncludePreprocessSkippedFiles
	}
	return 0
}

func (m *ExecLog) GetIncludeFileloadTime() int32 {
	if m != nil && m.IncludeFileloadTime != nil {
		return *m.IncludeFileloadTime
	}
	return 0
}

func (m *ExecLog) GetIncludeFileloadPendingTime() []int32 {
	if m != nil {
		return m.IncludeFileloadPendingTime
	}
	return nil
}

func (m *ExecLog) GetIncludeFileloadRunTime() []int32 {
	if m != nil {
		return m.IncludeFileloadRunTime
	}
	return nil
}

func (m *ExecLog) GetNumTotalInputFile() int32 {
	if m != nil && m.NumTotalInputFile != nil {
		return *m.NumTotalInputFile
	}
	return 0
}

func (m *ExecLog) GetNumUploadingInputFile() []int32 {
	if m != nil {
		return m.NumUploadingInputFile
	}
	return nil
}

func (m *ExecLog) GetNumMissingInputFile() []int32 {
	if m != nil {
		return m.NumMissingInputFile
	}
	return nil
}

func (m *ExecLog) GetNumFileUploadedDuringExecFailure() []int32 {
	if m != nil {
		return m.NumFileUploadedDuringExecFailure
	}
	return nil
}

func (m *ExecLog) GetInputFileTime() []int32 {
	if m != nil {
		return m.InputFileTime
	}
	return nil
}

func (m *ExecLog) GetInputFileSize() []int32 {
	if m != nil {
		return m.InputFileSize
	}
	return nil
}

func (m *ExecLog) GetRpcCallTime() []int32 {
	if m != nil {
		return m.RpcCallTime
	}
	return nil
}

func (m *ExecLog) GetRpcReqSize() []int32 {
	if m != nil {
		return m.RpcReqSize
	}
	return nil
}

func (m *ExecLog) GetRpcRespSize() []int32 {
	if m != nil {
		return m.RpcRespSize
	}
	return nil
}

func (m *ExecLog) GetRpcRawReqSize() []int32 {
	if m != nil {
		return m.RpcRawReqSize
	}
	return nil
}

func (m *ExecLog) GetRpcRawRespSize() []int32 {
	if m != nil {
		return m.RpcRawRespSize
	}
	return nil
}

func (m *ExecLog) GetRpcMasterTraceId() []string {
	if m != nil {
		return m.RpcMasterTraceId
	}
	return nil
}

func (m *ExecLog) GetRpcThrottleTime() []int32 {
	if m != nil {
		return m.RpcThrottleTime
	}
	return nil
}

func (m *ExecLog) GetRpcPendingTime() []int32 {
	if m != nil {
		return m.RpcPendingTime
	}
	return nil
}

func (m *ExecLog) GetRpcReqBuildTime() []int32 {
	if m != nil {
		return m.RpcReqBuildTime
	}
	return nil
}

func (m *ExecLog) GetRpcReqSendTime() []int32 {
	if m != nil {
		return m.RpcReqSendTime
	}
	return nil
}

func (m *ExecLog) GetRpcWaitTime() []int32 {
	if m != nil {
		return m.RpcWaitTime
	}
	return nil
}

func (m *ExecLog) GetRpcRespRecvTime() []int32 {
	if m != nil {
		return m.RpcRespRecvTime
	}
	return nil
}

func (m *ExecLog) GetRpcRespParseTime() []int32 {
	if m != nil {
		return m.RpcRespParseTime
	}
	return nil
}

func (m *ExecLog) GetFileResponseTime() int32 {
	if m != nil && m.FileResponseTime != nil {
		return *m.FileResponseTime
	}
	return 0
}

func (m *ExecLog) GetNumOutputFile() int32 {
	if m != nil && m.NumOutputFile != nil {
		return *m.NumOutputFile
	}
	return 0
}

func (m *ExecLog) GetOutputFileTime() []int32 {
	if m != nil {
		return m.OutputFileTime
	}
	return nil
}

func (m *ExecLog) GetOutputFileSize() []int32 {
	if m != nil {
		return m.OutputFileSize
	}
	return nil
}

func (m *ExecLog) GetChunkRespSize() []int32 {
	if m != nil {
		return m.ChunkRespSize
	}
	return nil
}

func (m *ExecLog) GetHandlerTime() int32 {
	if m != nil && m.HandlerTime != nil {
		return *m.HandlerTime
	}
	return 0
}

func (m *ExecLog) GetExecCommandNotFound() string {
	if m != nil && m.ExecCommandNotFound != nil {
		return *m.ExecCommandNotFound
	}
	return ""
}

func (m *ExecLog) GetExecCommandNameMismatch() string {
	if m != nil && m.ExecCommandNameMismatch != nil {
		return *m.ExecCommandNameMismatch
	}
	return ""
}

func (m *ExecLog) GetExecCommandTargetMismatch() string {
	if m != nil && m.ExecCommandTargetMismatch != nil {
		return *m.ExecCommandTargetMismatch
	}
	return ""
}

func (m *ExecLog) GetExecCommandVersionMismatch() string {
	if m != nil && m.ExecCommandVersionMismatch != nil {
		return *m.ExecCommandVersionMismatch
	}
	return ""
}

func (m *ExecLog) GetExecCommandBinaryHashMismatch() string {
	if m != nil && m.ExecCommandBinaryHashMismatch != nil {
		return *m.ExecCommandBinaryHashMismatch
	}
	return ""
}

func (m *ExecLog) GetExecCommandSubprogramsMismatch() string {
	if m != nil && m.ExecCommandSubprogramsMismatch != nil {
		return *m.ExecCommandSubprogramsMismatch
	}
	return ""
}

func (m *ExecLog) GetExecExitStatus() int32 {
	if m != nil && m.ExecExitStatus != nil {
		return *m.ExecExitStatus
	}
	return 0
}

func (m *ExecLog) GetExecRequestRetry() int32 {
	if m != nil && m.ExecRequestRetry != nil {
		return *m.ExecRequestRetry
	}
	return 0
}

func (m *ExecLog) GetExecRequestRetryReason() []string {
	if m != nil {
		return m.ExecRequestRetryReason
	}
	return nil
}

func (m *ExecLog) GetLocalRunReason() string {
	if m != nil && m.LocalRunReason != nil {
		return *m.LocalRunReason
	}
	return ""
}

func (m *ExecLog) GetLocalPendingTime() int32 {
	if m != nil && m.LocalPendingTime != nil {
		return *m.LocalPendingTime
	}
	return 0
}

func (m *ExecLog) GetLocalRunTime() int32 {
	if m != nil && m.LocalRunTime != nil {
		return *m.LocalRunTime
	}
	return 0
}

func (m *ExecLog) GetLocalMemKb() int64 {
	if m != nil && m.LocalMemKb != nil {
		return *m.LocalMemKb
	}
	return 0
}

func (m *ExecLog) GetLocalOutputFileTime() []int32 {
	if m != nil {
		return m.LocalOutputFileTime
	}
	return nil
}

func (m *ExecLog) GetLocalOutputFileSize() []int32 {
	if m != nil {
		return m.LocalOutputFileSize
	}
	return nil
}

func (m *ExecLog) GetLocalDelayTime() int32 {
	if m != nil && m.LocalDelayTime != nil {
		return *m.LocalDelayTime
	}
	return 0
}

func (m *ExecLog) GetCacheHit() bool {
	if m != nil && m.CacheHit != nil {
		return *m.CacheHit
	}
	return false
}

func (m *ExecLog) GetCacheSource() ExecLog_CacheSource {
	if m != nil && m.CacheSource != nil {
		return *m.CacheSource
	}
	return ExecLog_UNKNOWN_CACHE
}

func (m *ExecLog) GetGomaError() bool {
	if m != nil && m.GomaError != nil {
		return *m.GomaError
	}
	return false
}

func (m *ExecLog) GetCompilerProxyError() bool {
	if m != nil && m.CompilerProxyError != nil {
		return *m.CompilerProxyError
	}
	return false
}

// NEXT ID TO USE: 8
type MemoryUsageLog struct {
	// compiler_proxy identification
	CompilerProxyStartTime *int32  `protobuf:"varint,1,opt,name=compiler_proxy_start_time,json=compilerProxyStartTime" json:"compiler_proxy_start_time,omitempty"`
	CompilerProxyUserAgent *string `protobuf:"bytes,2,opt,name=compiler_proxy_user_agent,json=compilerProxyUserAgent" json:"compiler_proxy_user_agent,omitempty"`
	// user information
	Username *string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Nodename *string `protobuf:"bytes,4,opt,name=nodename" json:"nodename,omitempty"`
	// memory information
	Memory               *int64   `protobuf:"varint,5,opt,name=memory" json:"memory,omitempty"`
	VirtualMemory        *int64   `protobuf:"varint,7,opt,name=virtual_memory,json=virtualMemory" json:"virtual_memory,omitempty"`
	Time                 *int64   `protobuf:"varint,6,opt,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemoryUsageLog) Reset()         { *m = MemoryUsageLog{} }
func (m *MemoryUsageLog) String() string { return proto.CompactTextString(m) }
func (*MemoryUsageLog) ProtoMessage()    {}
func (*MemoryUsageLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{1}
}

func (m *MemoryUsageLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryUsageLog.Unmarshal(m, b)
}
func (m *MemoryUsageLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryUsageLog.Marshal(b, m, deterministic)
}
func (m *MemoryUsageLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryUsageLog.Merge(m, src)
}
func (m *MemoryUsageLog) XXX_Size() int {
	return xxx_messageInfo_MemoryUsageLog.Size(m)
}
func (m *MemoryUsageLog) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryUsageLog.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryUsageLog proto.InternalMessageInfo

func (m *MemoryUsageLog) GetCompilerProxyStartTime() int32 {
	if m != nil && m.CompilerProxyStartTime != nil {
		return *m.CompilerProxyStartTime
	}
	return 0
}

func (m *MemoryUsageLog) GetCompilerProxyUserAgent() string {
	if m != nil && m.CompilerProxyUserAgent != nil {
		return *m.CompilerProxyUserAgent
	}
	return ""
}

func (m *MemoryUsageLog) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *MemoryUsageLog) GetNodename() string {
	if m != nil && m.Nodename != nil {
		return *m.Nodename
	}
	return ""
}

func (m *MemoryUsageLog) GetMemory() int64 {
	if m != nil && m.Memory != nil {
		return *m.Memory
	}
	return 0
}

func (m *MemoryUsageLog) GetVirtualMemory() int64 {
	if m != nil && m.VirtualMemory != nil {
		return *m.VirtualMemory
	}
	return 0
}

func (m *MemoryUsageLog) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type SaveLogReq struct {
	ExecLog              []*ExecLog        `protobuf:"bytes,1,rep,name=exec_log,json=execLog" json:"exec_log,omitempty"`
	MemoryUsageLog       []*MemoryUsageLog `protobuf:"bytes,2,rep,name=memory_usage_log,json=memoryUsageLog" json:"memory_usage_log,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SaveLogReq) Reset()         { *m = SaveLogReq{} }
func (m *SaveLogReq) String() string { return proto.CompactTextString(m) }
func (*SaveLogReq) ProtoMessage()    {}
func (*SaveLogReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{2}
}

func (m *SaveLogReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveLogReq.Unmarshal(m, b)
}
func (m *SaveLogReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveLogReq.Marshal(b, m, deterministic)
}
func (m *SaveLogReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveLogReq.Merge(m, src)
}
func (m *SaveLogReq) XXX_Size() int {
	return xxx_messageInfo_SaveLogReq.Size(m)
}
func (m *SaveLogReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveLogReq.DiscardUnknown(m)
}

var xxx_messageInfo_SaveLogReq proto.InternalMessageInfo

func (m *SaveLogReq) GetExecLog() []*ExecLog {
	if m != nil {
		return m.ExecLog
	}
	return nil
}

func (m *SaveLogReq) GetMemoryUsageLog() []*MemoryUsageLog {
	if m != nil {
		return m.MemoryUsageLog
	}
	return nil
}

type SaveLogResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SaveLogResp) Reset()         { *m = SaveLogResp{} }
func (m *SaveLogResp) String() string { return proto.CompactTextString(m) }
func (*SaveLogResp) ProtoMessage()    {}
func (*SaveLogResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{3}
}

func (m *SaveLogResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveLogResp.Unmarshal(m, b)
}
func (m *SaveLogResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveLogResp.Marshal(b, m, deterministic)
}
func (m *SaveLogResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveLogResp.Merge(m, src)
}
func (m *SaveLogResp) XXX_Size() int {
	return xxx_messageInfo_SaveLogResp.Size(m)
}
func (m *SaveLogResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveLogResp.DiscardUnknown(m)
}

var xxx_messageInfo_SaveLogResp proto.InternalMessageInfo

type NumberSummary struct {
	Samples              *int64   `protobuf:"varint,1,opt,name=samples" json:"samples,omitempty"`
	Average              *int32   `protobuf:"varint,2,opt,name=average" json:"average,omitempty"`
	Minimum              *int32   `protobuf:"varint,10,opt,name=minimum" json:"minimum,omitempty"`
	Percentile_2         *int32   `protobuf:"varint,11,opt,name=percentile_2,json=percentile2" json:"percentile_2,omitempty"`
	Percentile_9         *int32   `protobuf:"varint,12,opt,name=percentile_9,json=percentile9" json:"percentile_9,omitempty"`
	LowerQuantile        *int32   `protobuf:"varint,13,opt,name=lower_quantile,json=lowerQuantile" json:"lower_quantile,omitempty"`
	Median               *int32   `protobuf:"varint,14,opt,name=median" json:"median,omitempty"`
	UpperQuantile        *int32   `protobuf:"varint,15,opt,name=upper_quantile,json=upperQuantile" json:"upper_quantile,omitempty"`
	Percentile_91        *int32   `protobuf:"varint,16,opt,name=percentile_91,json=percentile91" json:"percentile_91,omitempty"`
	Percentile_98        *int32   `protobuf:"varint,17,opt,name=percentile_98,json=percentile98" json:"percentile_98,omitempty"`
	Maximum              *int32   `protobuf:"varint,18,opt,name=maximum" json:"maximum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberSummary) Reset()         { *m = NumberSummary{} }
func (m *NumberSummary) String() string { return proto.CompactTextString(m) }
func (*NumberSummary) ProtoMessage()    {}
func (*NumberSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{4}
}

func (m *NumberSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberSummary.Unmarshal(m, b)
}
func (m *NumberSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberSummary.Marshal(b, m, deterministic)
}
func (m *NumberSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberSummary.Merge(m, src)
}
func (m *NumberSummary) XXX_Size() int {
	return xxx_messageInfo_NumberSummary.Size(m)
}
func (m *NumberSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberSummary.DiscardUnknown(m)
}

var xxx_messageInfo_NumberSummary proto.InternalMessageInfo

func (m *NumberSummary) GetSamples() int64 {
	if m != nil && m.Samples != nil {
		return *m.Samples
	}
	return 0
}

func (m *NumberSummary) GetAverage() int32 {
	if m != nil && m.Average != nil {
		return *m.Average
	}
	return 0
}

func (m *NumberSummary) GetMinimum() int32 {
	if m != nil && m.Minimum != nil {
		return *m.Minimum
	}
	return 0
}

func (m *NumberSummary) GetPercentile_2() int32 {
	if m != nil && m.Percentile_2 != nil {
		return *m.Percentile_2
	}
	return 0
}

func (m *NumberSummary) GetPercentile_9() int32 {
	if m != nil && m.Percentile_9 != nil {
		return *m.Percentile_9
	}
	return 0
}

func (m *NumberSummary) GetLowerQuantile() int32 {
	if m != nil && m.LowerQuantile != nil {
		return *m.LowerQuantile
	}
	return 0
}

func (m *NumberSummary) GetMedian() int32 {
	if m != nil && m.Median != nil {
		return *m.Median
	}
	return 0
}

func (m *NumberSummary) GetUpperQuantile() int32 {
	if m != nil && m.UpperQuantile != nil {
		return *m.UpperQuantile
	}
	return 0
}

func (m *NumberSummary) GetPercentile_91() int32 {
	if m != nil && m.Percentile_91 != nil {
		return *m.Percentile_91
	}
	return 0
}

func (m *NumberSummary) GetPercentile_98() int32 {
	if m != nil && m.Percentile_98 != nil {
		return *m.Percentile_98
	}
	return 0
}

func (m *NumberSummary) GetMaximum() int32 {
	if m != nil && m.Maximum != nil {
		return *m.Maximum
	}
	return 0
}

// NEXT ID TO USE: 13
type ExecLogStat struct {
	HandlerTime             *NumberSummary `protobuf:"bytes,1,opt,name=handler_time,json=handlerTime" json:"handler_time,omitempty"`
	CompilerInfoProcessTime *NumberSummary `protobuf:"bytes,12,opt,name=compiler_info_process_time,json=compilerInfoProcessTime" json:"compiler_info_process_time,omitempty"`
	IncludePreprocessTime   *NumberSummary `protobuf:"bytes,2,opt,name=include_preprocess_time,json=includePreprocessTime" json:"include_preprocess_time,omitempty"`
	IncludeFileloadTime     *NumberSummary `protobuf:"bytes,3,opt,name=include_fileload_time,json=includeFileloadTime" json:"include_fileload_time,omitempty"`
	RpcCallTime             *NumberSummary `protobuf:"bytes,4,opt,name=rpc_call_time,json=rpcCallTime" json:"rpc_call_time,omitempty"`
	FileResponseTime        *NumberSummary `protobuf:"bytes,7,opt,name=file_response_time,json=fileResponseTime" json:"file_response_time,omitempty"`
	LocalPendingTime        *NumberSummary `protobuf:"bytes,8,opt,name=local_pending_time,json=localPendingTime" json:"local_pending_time,omitempty"`
	LocalRunTime            *NumberSummary `protobuf:"bytes,9,opt,name=local_run_time,json=localRunTime" json:"local_run_time,omitempty"`
	CacheHit                *int64         `protobuf:"varint,10,opt,name=cache_hit,json=cacheHit" json:"cache_hit,omitempty"`
	GomaError               *int64         `protobuf:"varint,11,opt,name=goma_error,json=gomaError" json:"goma_error,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}       `json:"-"`
	XXX_unrecognized        []byte         `json:"-"`
	XXX_sizecache           int32          `json:"-"`
}

func (m *ExecLogStat) Reset()         { *m = ExecLogStat{} }
func (m *ExecLogStat) String() string { return proto.CompactTextString(m) }
func (*ExecLogStat) ProtoMessage()    {}
func (*ExecLogStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{5}
}

func (m *ExecLogStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecLogStat.Unmarshal(m, b)
}
func (m *ExecLogStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecLogStat.Marshal(b, m, deterministic)
}
func (m *ExecLogStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecLogStat.Merge(m, src)
}
func (m *ExecLogStat) XXX_Size() int {
	return xxx_messageInfo_ExecLogStat.Size(m)
}
func (m *ExecLogStat) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecLogStat.DiscardUnknown(m)
}

var xxx_messageInfo_ExecLogStat proto.InternalMessageInfo

func (m *ExecLogStat) GetHandlerTime() *NumberSummary {
	if m != nil {
		return m.HandlerTime
	}
	return nil
}

func (m *ExecLogStat) GetCompilerInfoProcessTime() *NumberSummary {
	if m != nil {
		return m.CompilerInfoProcessTime
	}
	return nil
}

func (m *ExecLogStat) GetIncludePreprocessTime() *NumberSummary {
	if m != nil {
		return m.IncludePreprocessTime
	}
	return nil
}

func (m *ExecLogStat) GetIncludeFileloadTime() *NumberSummary {
	if m != nil {
		return m.IncludeFileloadTime
	}
	return nil
}

func (m *ExecLogStat) GetRpcCallTime() *NumberSummary {
	if m != nil {
		return m.RpcCallTime
	}
	return nil
}

func (m *ExecLogStat) GetFileResponseTime() *NumberSummary {
	if m != nil {
		return m.FileResponseTime
	}
	return nil
}

func (m *ExecLogStat) GetLocalPendingTime() *NumberSummary {
	if m != nil {
		return m.LocalPendingTime
	}
	return nil
}

func (m *ExecLogStat) GetLocalRunTime() *NumberSummary {
	if m != nil {
		return m.LocalRunTime
	}
	return nil
}

func (m *ExecLogStat) GetCacheHit() int64 {
	if m != nil && m.CacheHit != nil {
		return *m.CacheHit
	}
	return 0
}

func (m *ExecLogStat) GetGomaError() int64 {
	if m != nil && m.GomaError != nil {
		return *m.GomaError
	}
	return 0
}

// NEXT ID TO USE: 12
type CpuFeatures struct {
	Mmx                     *bool    `protobuf:"varint,1,opt,name=mmx" json:"mmx,omitempty"`
	Sse                     *bool    `protobuf:"varint,2,opt,name=sse" json:"sse,omitempty"`
	Sse2                    *bool    `protobuf:"varint,3,opt,name=sse2" json:"sse2,omitempty"`
	Sse3                    *bool    `protobuf:"varint,4,opt,name=sse3" json:"sse3,omitempty"`
	Sse41                   *bool    `protobuf:"varint,5,opt,name=sse41" json:"sse41,omitempty"`
	Sse42                   *bool    `protobuf:"varint,6,opt,name=sse42" json:"sse42,omitempty"`
	Popcnt                  *bool    `protobuf:"varint,7,opt,name=popcnt" json:"popcnt,omitempty"`
	Avx                     *bool    `protobuf:"varint,8,opt,name=avx" json:"avx,omitempty"`
	Avx2                    *bool    `protobuf:"varint,9,opt,name=avx2" json:"avx2,omitempty"`
	Aesni                   *bool    `protobuf:"varint,10,opt,name=aesni" json:"aesni,omitempty"`
	NonStopTimeStampCounter *bool    `protobuf:"varint,11,opt,name=non_stop_time_stamp_counter,json=nonStopTimeStampCounter" json:"non_stop_time_stamp_counter,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *CpuFeatures) Reset()         { *m = CpuFeatures{} }
func (m *CpuFeatures) String() string { return proto.CompactTextString(m) }
func (*CpuFeatures) ProtoMessage()    {}
func (*CpuFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{6}
}

func (m *CpuFeatures) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CpuFeatures.Unmarshal(m, b)
}
func (m *CpuFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CpuFeatures.Marshal(b, m, deterministic)
}
func (m *CpuFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CpuFeatures.Merge(m, src)
}
func (m *CpuFeatures) XXX_Size() int {
	return xxx_messageInfo_CpuFeatures.Size(m)
}
func (m *CpuFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_CpuFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_CpuFeatures proto.InternalMessageInfo

func (m *CpuFeatures) GetMmx() bool {
	if m != nil && m.Mmx != nil {
		return *m.Mmx
	}
	return false
}

func (m *CpuFeatures) GetSse() bool {
	if m != nil && m.Sse != nil {
		return *m.Sse
	}
	return false
}

func (m *CpuFeatures) GetSse2() bool {
	if m != nil && m.Sse2 != nil {
		return *m.Sse2
	}
	return false
}

func (m *CpuFeatures) GetSse3() bool {
	if m != nil && m.Sse3 != nil {
		return *m.Sse3
	}
	return false
}

func (m *CpuFeatures) GetSse41() bool {
	if m != nil && m.Sse41 != nil {
		return *m.Sse41
	}
	return false
}

func (m *CpuFeatures) GetSse42() bool {
	if m != nil && m.Sse42 != nil {
		return *m.Sse42
	}
	return false
}

func (m *CpuFeatures) GetPopcnt() bool {
	if m != nil && m.Popcnt != nil {
		return *m.Popcnt
	}
	return false
}

func (m *CpuFeatures) GetAvx() bool {
	if m != nil && m.Avx != nil {
		return *m.Avx
	}
	return false
}

func (m *CpuFeatures) GetAvx2() bool {
	if m != nil && m.Avx2 != nil {
		return *m.Avx2
	}
	return false
}

func (m *CpuFeatures) GetAesni() bool {
	if m != nil && m.Aesni != nil {
		return *m.Aesni
	}
	return false
}

func (m *CpuFeatures) GetNonStopTimeStampCounter() bool {
	if m != nil && m.NonStopTimeStampCounter != nil {
		return *m.NonStopTimeStampCounter
	}
	return false
}

// NEXT ID TO USE: 4
type OSInfo struct {
	// Types that are valid to be assigned to OsInfoOneof:
	//	*OSInfo_LinuxInfo_
	//	*OSInfo_WinInfo_
	//	*OSInfo_MacInfo_
	OsInfoOneof          isOSInfo_OsInfoOneof `protobuf_oneof:"os_info_oneof"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OSInfo) Reset()         { *m = OSInfo{} }
func (m *OSInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo) ProtoMessage()    {}
func (*OSInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{7}
}

func (m *OSInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo.Unmarshal(m, b)
}
func (m *OSInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo.Merge(m, src)
}
func (m *OSInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo.Size(m)
}
func (m *OSInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo proto.InternalMessageInfo

type isOSInfo_OsInfoOneof interface {
	isOSInfo_OsInfoOneof()
}

type OSInfo_LinuxInfo_ struct {
	LinuxInfo *OSInfo_LinuxInfo `protobuf:"bytes,1,opt,name=linux_info,json=linuxInfo,oneof"`
}

type OSInfo_WinInfo_ struct {
	WinInfo *OSInfo_WinInfo `protobuf:"bytes,2,opt,name=win_info,json=winInfo,oneof"`
}

type OSInfo_MacInfo_ struct {
	MacInfo *OSInfo_MacInfo `protobuf:"bytes,3,opt,name=mac_info,json=macInfo,oneof"`
}

func (*OSInfo_LinuxInfo_) isOSInfo_OsInfoOneof() {}

func (*OSInfo_WinInfo_) isOSInfo_OsInfoOneof() {}

func (*OSInfo_MacInfo_) isOSInfo_OsInfoOneof() {}

func (m *OSInfo) GetOsInfoOneof() isOSInfo_OsInfoOneof {
	if m != nil {
		return m.OsInfoOneof
	}
	return nil
}

func (m *OSInfo) GetLinuxInfo() *OSInfo_LinuxInfo {
	if x, ok := m.GetOsInfoOneof().(*OSInfo_LinuxInfo_); ok {
		return x.LinuxInfo
	}
	return nil
}

func (m *OSInfo) GetWinInfo() *OSInfo_WinInfo {
	if x, ok := m.GetOsInfoOneof().(*OSInfo_WinInfo_); ok {
		return x.WinInfo
	}
	return nil
}

func (m *OSInfo) GetMacInfo() *OSInfo_MacInfo {
	if x, ok := m.GetOsInfoOneof().(*OSInfo_MacInfo_); ok {
		return x.MacInfo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OSInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OSInfo_LinuxInfo_)(nil),
		(*OSInfo_WinInfo_)(nil),
		(*OSInfo_MacInfo_)(nil),
	}
}

type OSInfo_LinuxInfo struct {
	GnuLibcVersion       *string  `protobuf:"bytes,1,opt,name=gnu_libc_version,json=gnuLibcVersion" json:"gnu_libc_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OSInfo_LinuxInfo) Reset()         { *m = OSInfo_LinuxInfo{} }
func (m *OSInfo_LinuxInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo_LinuxInfo) ProtoMessage()    {}
func (*OSInfo_LinuxInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{7, 0}
}

func (m *OSInfo_LinuxInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo_LinuxInfo.Unmarshal(m, b)
}
func (m *OSInfo_LinuxInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo_LinuxInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo_LinuxInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo_LinuxInfo.Merge(m, src)
}
func (m *OSInfo_LinuxInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo_LinuxInfo.Size(m)
}
func (m *OSInfo_LinuxInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo_LinuxInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo_LinuxInfo proto.InternalMessageInfo

func (m *OSInfo_LinuxInfo) GetGnuLibcVersion() string {
	if m != nil && m.GnuLibcVersion != nil {
		return *m.GnuLibcVersion
	}
	return ""
}

type OSInfo_WinInfo struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OSInfo_WinInfo) Reset()         { *m = OSInfo_WinInfo{} }
func (m *OSInfo_WinInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo_WinInfo) ProtoMessage()    {}
func (*OSInfo_WinInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{7, 1}
}

func (m *OSInfo_WinInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo_WinInfo.Unmarshal(m, b)
}
func (m *OSInfo_WinInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo_WinInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo_WinInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo_WinInfo.Merge(m, src)
}
func (m *OSInfo_WinInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo_WinInfo.Size(m)
}
func (m *OSInfo_WinInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo_WinInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo_WinInfo proto.InternalMessageInfo

type OSInfo_MacInfo struct {
	// TODO: Have max_osx_major_version
	MacOsxMinorVersion   *int32   `protobuf:"varint,1,opt,name=mac_osx_minor_version,json=macOsxMinorVersion" json:"mac_osx_minor_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OSInfo_MacInfo) Reset()         { *m = OSInfo_MacInfo{} }
func (m *OSInfo_MacInfo) String() string { return proto.CompactTextString(m) }
func (*OSInfo_MacInfo) ProtoMessage()    {}
func (*OSInfo_MacInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_663523c6ed595628, []int{7, 2}
}

func (m *OSInfo_MacInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OSInfo_MacInfo.Unmarshal(m, b)
}
func (m *OSInfo_MacInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OSInfo_MacInfo.Marshal(b, m, deterministic)
}
func (m *OSInfo_MacInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OSInfo_MacInfo.Merge(m, src)
}
func (m *OSInfo_MacInfo) XXX_Size() int {
	return xxx_messageInfo_OSInfo_MacInfo.Size(m)
}
func (m *OSInfo_MacInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_OSInfo_MacInfo.DiscardUnknown(m)
}

var xxx_messageInfo_OSInfo_MacInfo proto.InternalMessageInfo

func (m *OSInfo_MacInfo) GetMacOsxMinorVersion() int32 {
	if m != nil && m.MacOsxMinorVersion != nil {
		return *m.MacOsxMinorVersion
	}
	return 0
}

func init() {
	proto.RegisterEnum("devtools_goma.ExecLog_AuthenticationType", ExecLog_AuthenticationType_name, ExecLog_AuthenticationType_value)
	proto.RegisterEnum("devtools_goma.ExecLog_NetworkFailureType", ExecLog_NetworkFailureType_name, ExecLog_NetworkFailureType_value)
	proto.RegisterEnum("devtools_goma.ExecLog_CacheSource", ExecLog_CacheSource_name, ExecLog_CacheSource_value)
	proto.RegisterType((*ExecLog)(nil), "devtools_goma.ExecLog")
	proto.RegisterType((*MemoryUsageLog)(nil), "devtools_goma.MemoryUsageLog")
	proto.RegisterType((*SaveLogReq)(nil), "devtools_goma.SaveLogReq")
	proto.RegisterType((*SaveLogResp)(nil), "devtools_goma.SaveLogResp")
	proto.RegisterType((*NumberSummary)(nil), "devtools_goma.NumberSummary")
	proto.RegisterType((*ExecLogStat)(nil), "devtools_goma.ExecLogStat")
	proto.RegisterType((*CpuFeatures)(nil), "devtools_goma.CpuFeatures")
	proto.RegisterType((*OSInfo)(nil), "devtools_goma.OSInfo")
	proto.RegisterType((*OSInfo_LinuxInfo)(nil), "devtools_goma.OSInfo.LinuxInfo")
	proto.RegisterType((*OSInfo_WinInfo)(nil), "devtools_goma.OSInfo.WinInfo")
	proto.RegisterType((*OSInfo_MacInfo)(nil), "devtools_goma.OSInfo.MacInfo")
}

func init() {
	proto.RegisterFile("api/goma_log.proto", fileDescriptor_663523c6ed595628)
}

var fileDescriptor_663523c6ed595628 = []byte{
	// 2573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x58, 0xdd, 0x76, 0xdb, 0x36,
	0x12, 0xae, 0x2c, 0xdb, 0x92, 0x21, 0xcb, 0x56, 0x90, 0xd8, 0x61, 0x9c, 0xba, 0xab, 0xa8, 0x4d,
	0xab, 0xfe, 0xb9, 0x8d, 0xd2, 0xbf, 0xf4, 0x67, 0x5b, 0x59, 0x96, 0x63, 0x25, 0xb6, 0xe4, 0x52,
	0x52, 0xb2, 0xed, 0x5e, 0xf0, 0xc0, 0x14, 0x2c, 0xf3, 0x84, 0x04, 0x69, 0x82, 0xb4, 0xe5, 0x3e,
	0xc1, 0xde, 0xee, 0xd5, 0x5e, 0xec, 0x23, 0xec, 0x39, 0xfb, 0x0a, 0xfb, 0x10, 0xfb, 0x1c, 0xfb,
	0x0e, 0x7b, 0x66, 0x00, 0x52, 0x7f, 0x8e, 0x8f, 0xaf, 0x24, 0xcc, 0x7c, 0xdf, 0x07, 0x70, 0x30,
	0x00, 0x06, 0x20, 0x94, 0x05, 0xce, 0x17, 0x43, 0xdf, 0x63, 0x96, 0xeb, 0x0f, 0x77, 0x82, 0xd0,
	0x8f, 0x7c, 0x5a, 0x1c, 0xf0, 0x8b, 0xc8, 0xf7, 0x5d, 0x69, 0x81, 0xa3, 0xf2, 0xcf, 0x32, 0xc9,
	0x35, 0x47, 0xdc, 0x3e, 0xf4, 0x87, 0x74, 0x8b, 0xe4, 0x63, 0xc9, 0x43, 0xc1, 0x3c, 0x6e, 0xec,
	0x94, 0x33, 0xd5, 0x15, 0x33, 0x6d, 0x83, 0x4f, 0xf8, 0x03, 0x8e, 0xbe, 0x2f, 0x94, 0x2f, 0x69,
	0x53, 0x4a, 0x16, 0x03, 0x3f, 0x8c, 0x8c, 0x2f, 0xcb, 0x99, 0xea, 0x92, 0x89, 0xff, 0xe9, 0x33,
	0xf2, 0xc0, 0xf6, 0xbd, 0xc0, 0x71, 0x79, 0x68, 0x05, 0xa1, 0x3f, 0xba, 0xb2, 0x64, 0xc4, 0xc2,
	0xc8, 0x8a, 0x1c, 0x8f, 0x1b, 0x4f, 0x10, 0xb8, 0x99, 0x00, 0x8e, 0xc1, 0xdf, 0x05, 0x77, 0xcf,
	0xf1, 0x38, 0xbd, 0x4f, 0x72, 0x11, 0x93, 0x6f, 0x2c, 0x67, 0x60, 0xd4, 0x10, 0xb8, 0x0c, 0xcd,
	0xd6, 0x80, 0x3e, 0x20, 0xf9, 0x93, 0xd8, 0x71, 0x07, 0xe0, 0xf9, 0x2b, 0x8e, 0x21, 0x87, 0xed,
	0xd6, 0xe0, 0x9a, 0xee, 0x60, 0xe4, 0x16, 0x1b, 0x72, 0x11, 0x19, 0x4f, 0x11, 0x3b, 0xdd, 0x5d,
	0x5f, 0xf2, 0xb0, 0x0e, 0x5e, 0xba, 0x4d, 0xc8, 0xc4, 0xd0, 0x16, 0xb0, 0xc7, 0x15, 0x99, 0x8e,
	0xa6, 0x44, 0xb2, 0x2c, 0x1c, 0x1a, 0xd9, 0x72, 0xb6, 0xba, 0x62, 0xc2, 0x5f, 0xb0, 0x70, 0x71,
	0x61, 0x2c, 0x2a, 0x0b, 0x17, 0x17, 0x60, 0xb1, 0x2f, 0x07, 0xc6, 0x12, 0xf6, 0x03, 0x7f, 0xe9,
	0x23, 0xb2, 0xca, 0x47, 0x01, 0x13, 0x03, 0x3e, 0xb0, 0x80, 0xfe, 0x67, 0x04, 0x17, 0x12, 0x5b,
	0x3d, 0x1c, 0xd2, 0x8f, 0xc8, 0xba, 0xed, 0x7b, 0x1e, 0x13, 0x03, 0xeb, 0x82, 0x87, 0xd2, 0xf1,
	0x85, 0xf1, 0x1c, 0x05, 0xd6, 0xb4, 0xf9, 0x95, 0xb2, 0xd2, 0xc7, 0x24, 0xb1, 0x58, 0x11, 0x0b,
	0x87, 0x3c, 0x32, 0x0e, 0x10, 0x57, 0xd4, 0xd6, 0x1e, 0x1a, 0x69, 0x8d, 0x6c, 0xb8, 0x2c, 0xe2,
	0x32, 0xb2, 0x1c, 0x11, 0xc4, 0x91, 0x75, 0xea, 0xb8, 0x6a, 0xba, 0x7e, 0x40, 0xf4, 0x5d, 0xe5,
	0x6c, 0x81, 0x6f, 0x5f, 0xbb, 0xe8, 0x67, 0x84, 0x4e, 0x71, 0x3c, 0x8c, 0xc1, 0x8f, 0x18, 0x83,
	0xd2, 0x04, 0xe1, 0x28, 0xd2, 0x13, 0x13, 0x4b, 0x6e, 0x49, 0xe9, 0x1a, 0xbf, 0x94, 0x33, 0xd5,
	0xbc, 0xb9, 0x1c, 0x4b, 0xde, 0x95, 0x2e, 0x3d, 0x24, 0x2b, 0x2c, 0x8e, 0xce, 0xac, 0xe8, 0x2a,
	0xe0, 0xc6, 0xab, 0x72, 0xa6, 0xba, 0x56, 0xfb, 0x78, 0x67, 0x2a, 0xcf, 0x76, 0x74, 0x8e, 0xed,
	0xd4, 0xe3, 0xe8, 0x8c, 0x8b, 0xc8, 0xb1, 0x59, 0xe4, 0xf8, 0xa2, 0x77, 0x15, 0xf0, 0xef, 0x17,
	0xdb, 0x9d, 0x76, 0xd3, 0xcc, 0x83, 0x02, 0xb4, 0xe9, 0x4f, 0x64, 0xd5, 0x0e, 0x62, 0xeb, 0x94,
	0xb3, 0x28, 0x0e, 0xb9, 0x34, 0x5e, 0x97, 0x33, 0xd5, 0x42, 0x6d, 0x6b, 0x46, 0xb0, 0x11, 0xc4,
	0xfb, 0x1a, 0x61, 0x16, 0xec, 0x71, 0x83, 0x7a, 0xe4, 0x9e, 0xe0, 0xd1, 0xa5, 0x1f, 0xbe, 0xb1,
	0x4e, 0x99, 0xe3, 0xc6, 0x21, 0x57, 0xe3, 0xfa, 0xcb, 0x8d, 0xe3, 0x6a, 0x2b, 0xca, 0xbe, 0x62,
	0xe0, 0xb8, 0x4a, 0xed, 0x8e, 0xd5, 0x6e, 0xf6, 0x5e, 0x77, 0xcc, 0x97, 0x56, 0xd3, 0x34, 0x3b,
	0xa6, 0x49, 0xc5, 0x1c, 0x8a, 0xee, 0x90, 0x9c, 0x2f, 0x2d, 0x47, 0x9c, 0xfa, 0xc6, 0x6f, 0x38,
	0xd0, 0x8d, 0x99, 0x1e, 0x3a, 0xdd, 0x96, 0x38, 0xf5, 0xcd, 0x65, 0x5f, 0xc2, 0x2f, 0x64, 0x46,
	0xc0, 0xc5, 0xc0, 0x11, 0x43, 0x95, 0x70, 0x3f, 0x63, 0xb0, 0x0b, 0xda, 0x86, 0x29, 0xf7, 0x03,
	0xd9, 0x4a, 0x93, 0x19, 0x84, 0x21, 0xa3, 0x6d, 0x2e, 0xa5, 0x22, 0x98, 0x48, 0xb8, 0x9f, 0x20,
	0x40, 0xf4, 0x58, 0xf9, 0x91, 0xfc, 0x0d, 0xb9, 0xef, 0x08, 0xdb, 0x8d, 0x07, 0xdc, 0x0a, 0x42,
	0x3e, 0xc5, 0x5c, 0x46, 0xe6, 0x86, 0x76, 0x1f, 0xa7, 0x5e, 0xe4, 0xfd, 0x44, 0x1e, 0x8e, 0x79,
	0x68, 0xf6, 0x43, 0xeb, 0x92, 0x39, 0x7a, 0x5d, 0xf4, 0x90, 0x6b, 0xa4, 0x5c, 0x8d, 0x78, 0xcd,
	0x9c, 0x28, 0x19, 0xf3, 0x3c, 0x3d, 0x8c, 0x85, 0x62, 0xf7, 0xd5, 0x98, 0x67, 0xd9, 0x66, 0x2c,
	0x90, 0xfc, 0x98, 0xac, 0x0d, 0x78, 0x20, 0x6d, 0x66, 0x9f, 0x71, 0x58, 0xb8, 0x03, 0xa3, 0x8d,
	0xf9, 0x55, 0x4c, 0xad, 0x7d, 0xc9, 0x07, 0xb4, 0x41, 0xde, 0xbb, 0xee, 0xd3, 0xfc, 0x88, 0xb9,
	0x98, 0xed, 0xd2, 0xe8, 0x60, 0x3f, 0x0f, 0xe7, 0xbf, 0x10, 0x30, 0x90, 0xf5, 0x92, 0x3e, 0x27,
	0xe5, 0x6b, 0x44, 0xe4, 0x1b, 0x27, 0x08, 0xf8, 0x40, 0xcb, 0x1c, 0xa3, 0xcc, 0xf6, 0x9c, 0x4c,
	0x57, 0xa1, 0x94, 0x50, 0x8d, 0x24, 0x91, 0x44, 0x96, 0xeb, 0xb3, 0x81, 0xfa, 0xd8, 0x1c, 0xb2,
	0xef, 0x6a, 0xe7, 0xbe, 0xf6, 0xe1, 0x87, 0xd6, 0xc9, 0xf6, 0x1c, 0x67, 0x2a, 0x1b, 0x9a, 0xe5,
	0x6c, 0x75, 0xc9, 0xdc, 0x9a, 0xe1, 0x1e, 0x4f, 0x24, 0xc7, 0x33, 0xf2, 0x60, 0x4e, 0x22, 0x8d,
	0xf3, 0x3e, 0xd2, 0x37, 0x67, 0xe8, 0x49, 0x98, 0xbf, 0x20, 0xf7, 0x44, 0xec, 0xe9, 0x80, 0x8d,
	0x37, 0x09, 0x23, 0x8f, 0x03, 0xbe, 0x23, 0x62, 0x0f, 0xe3, 0x94, 0x6e, 0x11, 0xf4, 0x5b, 0x62,
	0x00, 0x21, 0x0e, 0x40, 0x05, 0xc6, 0x38, 0x41, 0x5a, 0xc1, 0xae, 0x36, 0x44, 0xec, 0xf5, 0x13,
	0xf7, 0x98, 0xf8, 0x94, 0x6c, 0x02, 0xd1, 0x73, 0xa4, 0x9c, 0xa1, 0x11, 0xa4, 0xdd, 0x15, 0xb1,
	0x77, 0xa4, 0x9c, 0x63, 0x52, 0x87, 0x3c, 0x06, 0x12, 0xc0, 0x74, 0x97, 0x7c, 0x60, 0x0d, 0xe2,
	0x10, 0x14, 0xf8, 0x88, 0xdb, 0xc9, 0x72, 0x36, 0x76, 0x51, 0xa3, 0x2c, 0x62, 0x0f, 0x78, 0x7d,
	0x0d, 0xdd, 0x43, 0x24, 0xac, 0x67, 0xbd, 0x3c, 0xe9, 0x87, 0x64, 0x7d, 0xdc, 0xb3, 0x0a, 0x50,
	0x01, 0xa9, 0x45, 0x27, 0xe9, 0x14, 0xe3, 0x32, 0x8d, 0x93, 0xce, 0x1f, 0xdc, 0x58, 0x9d, 0xc1,
	0x75, 0x9d, 0x3f, 0x38, 0xad, 0x90, 0x62, 0x18, 0xd8, 0x96, 0xcd, 0x5c, 0x57, 0xa9, 0x15, 0x11,
	0x55, 0x08, 0x03, 0xbb, 0xc1, 0x5c, 0x17, 0xb5, 0xca, 0x64, 0x15, 0x30, 0x21, 0x3f, 0x57, 0x42,
	0x6b, 0x08, 0x21, 0x61, 0x60, 0x9b, 0xfc, 0x7c, 0x52, 0x25, 0xe4, 0x32, 0x50, 0x90, 0xf5, 0x54,
	0xc5, 0xe4, 0x32, 0x40, 0xcc, 0x47, 0xa4, 0x84, 0x18, 0x76, 0x39, 0x56, 0x2a, 0xa9, 0x21, 0x01,
	0x8c, 0x5d, 0x26, 0x62, 0x1f, 0x93, 0x3b, 0x63, 0x60, 0x22, 0x78, 0x07, 0x91, 0x6b, 0x09, 0x52,
	0x6b, 0x7e, 0x4e, 0xee, 0x02, 0xd4, 0x63, 0x32, 0xe2, 0xa1, 0x15, 0x85, 0xcc, 0xe6, 0x70, 0x90,
	0x7e, 0x8f, 0x27, 0x13, 0x74, 0x77, 0x84, 0x9e, 0x1e, 0x38, 0x5a, 0x03, 0xfa, 0x89, 0x52, 0x8e,
	0xce, 0x42, 0x3f, 0x8a, 0x92, 0xf0, 0x35, 0x50, 0x79, 0x3d, 0x0c, 0xec, 0x9e, 0xb6, 0xe3, 0x47,
	0x57, 0xd5, 0x70, 0xa7, 0x32, 0xf9, 0x59, 0x3a, 0x88, 0xc9, 0xec, 0xfd, 0x94, 0xd0, 0x24, 0x3c,
	0xea, 0x28, 0x47, 0x2c, 0x4d, 0x65, 0x4d, 0x7e, 0xbe, 0x0b, 0x76, 0x04, 0x27, 0x1f, 0x07, 0x11,
	0xe0, 0x42, 0x63, 0xef, 0x8e, 0x3f, 0x8e, 0x9f, 0x77, 0xb9, 0x50, 0x50, 0x1d, 0xd4, 0xf1, 0x7e,
	0x75, 0x2f, 0x0d, 0x6a, 0xba, 0x45, 0xa5, 0x7d, 0xcb, 0xc0, 0x0a, 0xb9, 0x7d, 0xa1, 0x80, 0x1b,
	0x13, 0x7d, 0xcb, 0xc0, 0xe4, 0xf6, 0x05, 0x82, 0x75, 0xb4, 0x10, 0x1c, 0xb0, 0x50, 0xea, 0x00,
	0x6c, 0x22, 0xba, 0xa4, 0xd1, 0xc7, 0xe0, 0x40, 0xf8, 0x67, 0x84, 0x62, 0xf2, 0x00, 0xde, 0x17,
	0x09, 0xba, 0xac, 0x0e, 0x52, 0xf0, 0x98, 0xda, 0x91, 0x24, 0x1c, 0x64, 0xba, 0x1f, 0x47, 0xe9,
	0xba, 0x78, 0x84, 0xd0, 0xa2, 0x88, 0xbd, 0x0e, 0x5a, 0x71, 0x45, 0x54, 0x49, 0x69, 0x02, 0xa3,
	0x34, 0x2b, 0xea, 0xfb, 0xfd, 0x14, 0x95, 0xcc, 0xc0, 0x24, 0x12, 0xd3, 0xe0, 0xfd, 0x59, 0x24,
	0xa6, 0xc1, 0x87, 0x64, 0xdd, 0x3e, 0x8b, 0xc5, 0x9b, 0x89, 0x7c, 0xf9, 0x40, 0x65, 0x16, 0x9a,
	0xd3, 0x74, 0x79, 0x44, 0x56, 0xcf, 0x98, 0x18, 0xc0, 0x19, 0x84, 0xfd, 0x3e, 0x56, 0xe7, 0x94,
	0xb6, 0x61, 0xa7, 0x4f, 0xc9, 0x26, 0xae, 0xcb, 0xa4, 0x3a, 0x11, 0x7e, 0x64, 0x9d, 0xfa, 0xb1,
	0x18, 0x18, 0x87, 0xaa, 0xe4, 0x00, 0x6f, 0x43, 0x39, 0xdb, 0x7e, 0xb4, 0x0f, 0x2e, 0x38, 0x28,
	0xa6, 0x49, 0xcc, 0xe3, 0xb0, 0x51, 0x78, 0x2c, 0xb2, 0xcf, 0x8c, 0x16, 0x12, 0xef, 0x4f, 0x12,
	0x99, 0xc7, 0x8f, 0xb4, 0x9b, 0xfe, 0x4c, 0xde, 0x9d, 0x22, 0xab, 0x7a, 0x68, 0x4c, 0x7f, 0x81,
	0xf4, 0x07, 0x13, 0x74, 0x55, 0x1c, 0xa5, 0x02, 0x75, 0xb2, 0x3d, 0x25, 0xa0, 0x2b, 0xaf, 0xb1,
	0xc2, 0x87, 0xa8, 0xb0, 0x35, 0xa1, 0xa0, 0xcb, 0xb0, 0x54, 0xe2, 0x80, 0x3c, 0x9a, 0x92, 0x38,
	0x71, 0x04, 0x0b, 0xaf, 0xac, 0x33, 0x26, 0xcf, 0xc6, 0x32, 0x1f, 0xa1, 0xcc, 0xf6, 0x84, 0xcc,
	0x2e, 0xc2, 0x0e, 0x98, 0x3c, 0x4b, 0x95, 0x5a, 0x33, 0x4a, 0x32, 0x3e, 0x09, 0x42, 0x7f, 0x18,
	0x32, 0x4f, 0x8e, 0x95, 0x5e, 0xa2, 0xd2, 0x7b, 0x13, 0x4a, 0xdd, 0x31, 0x2c, 0x95, 0xaa, 0x92,
	0x12, 0x4a, 0xf1, 0x91, 0x13, 0x41, 0xa5, 0x1d, 0xc5, 0xd2, 0xa8, 0xe2, 0x8c, 0xad, 0x81, 0xbd,
	0x39, 0x72, 0xa2, 0x2e, 0x5a, 0x21, 0x53, 0x11, 0x19, 0xf2, 0xf3, 0x18, 0x0a, 0xbf, 0x90, 0x47,
	0xe1, 0x95, 0xf1, 0xb1, 0xca, 0x54, 0xf0, 0x98, 0xca, 0x61, 0x82, 0x1d, 0x4e, 0x9b, 0x79, 0xb4,
	0x15, 0x72, 0x26, 0x7d, 0x61, 0x7c, 0x87, 0x5b, 0xc7, 0xe6, 0x2c, 0xc9, 0x44, 0x2f, 0x0c, 0xc9,
	0xf5, 0x6d, 0xe6, 0xe2, 0xe9, 0xa4, 0x19, 0x9f, 0xa8, 0x02, 0x17, 0xed, 0x66, 0x2c, 0x34, 0x12,
	0xaa, 0x50, 0x44, 0x4e, 0x6d, 0x20, 0x9f, 0xea, 0x2a, 0x14, 0x3c, 0x93, 0x5b, 0xc8, 0x07, 0x64,
	0x6d, 0xac, 0x8b, 0xc8, 0xcf, 0x10, 0xb9, 0x9a, 0xa8, 0x26, 0xfb, 0xb0, 0x42, 0x79, 0xdc, 0xb3,
	0xde, 0x9c, 0x18, 0x5f, 0x95, 0x33, 0xd5, 0xac, 0x49, 0xd0, 0x76, 0xc4, 0xbd, 0x97, 0x27, 0x90,
	0xbd, 0x0a, 0x31, 0xb7, 0xc4, 0xbe, 0x51, 0x67, 0x14, 0x7a, 0x3b, 0xd3, 0xeb, 0xec, 0x5a, 0x12,
	0x2e, 0xa2, 0x6f, 0xaf, 0x25, 0xe1, 0x52, 0x4a, 0x23, 0x31, 0xe0, 0x2e, 0xbb, 0x52, 0x7d, 0xfc,
	0xa4, 0x26, 0x07, 0xed, 0x7b, 0x60, 0x46, 0xf9, 0x87, 0x64, 0x45, 0x15, 0x41, 0x67, 0x4e, 0x64,
	0x7c, 0x8e, 0x35, 0x50, 0x1e, 0x0d, 0x07, 0x4e, 0x44, 0x9b, 0x64, 0x55, 0x39, 0xa5, 0x1f, 0x87,
	0x36, 0x37, 0x7e, 0xc7, 0x82, 0xb6, 0xf2, 0x96, 0x82, 0xb6, 0x01, 0xd0, 0x2e, 0x22, 0xcd, 0x82,
	0x3d, 0x6e, 0xc0, 0x7d, 0x07, 0xaf, 0x84, 0x3c, 0x0c, 0xfd, 0xd0, 0xf8, 0x1a, 0x3b, 0x59, 0x01,
	0x4b, 0x13, 0x0c, 0xf4, 0x4b, 0x72, 0x6f, 0xe6, 0x26, 0xa5, 0x80, 0x47, 0x08, 0xa4, 0x53, 0x97,
	0x28, 0x64, 0x54, 0xfe, 0x9d, 0x21, 0x74, 0xbe, 0xac, 0xa7, 0x79, 0x82, 0x85, 0x7d, 0xe9, 0x1d,
	0x5a, 0x20, 0xb9, 0x7e, 0xfb, 0x65, 0xbb, 0xf3, 0xba, 0x5d, 0xca, 0xd0, 0x3b, 0xa4, 0xd8, 0xa9,
	0xf7, 0x7b, 0x07, 0x35, 0xab, 0xdf, 0xee, 0x1e, 0x37, 0x1b, 0xa5, 0x45, 0xba, 0x49, 0xa8, 0x36,
	0xd5, 0x8f, 0x8f, 0x0f, 0x5b, 0x8d, 0x7a, 0xaf, 0xd5, 0x69, 0x97, 0x96, 0xe8, 0x16, 0xd9, 0xd4,
	0xf6, 0x6e, 0xd3, 0x7c, 0xd5, 0x6a, 0x34, 0xad, 0x7a, 0xa3, 0xd1, 0xe9, 0xb7, 0x7b, 0xa5, 0x65,
	0xfa, 0x1e, 0xd9, 0xd2, 0xbe, 0xe7, 0x8d, 0xe6, 0x9c, 0x3f, 0x37, 0xc1, 0x3d, 0xec, 0x37, 0x5a,
	0xd6, 0x61, 0xa7, 0x51, 0x3f, 0xb4, 0xc0, 0x50, 0xca, 0x57, 0xfe, 0x93, 0x21, 0x74, 0xbe, 0xde,
	0xa7, 0xf7, 0xc8, 0x5c, 0xc5, 0x5f, 0x7a, 0x87, 0xae, 0x92, 0xfc, 0x5e, 0xab, 0x5b, 0xdf, 0x3d,
	0x6c, 0xee, 0x95, 0x32, 0xf4, 0x01, 0xd9, 0xd0, 0x9f, 0x32, 0x03, 0x5c, 0xa0, 0x94, 0xac, 0x35,
	0x3a, 0xed, 0x76, 0xb3, 0xd1, 0xb3, 0xf6, 0xeb, 0x2d, 0x80, 0x67, 0xe9, 0x3a, 0x29, 0x74, 0x9b,
	0xed, 0xbd, 0xc4, 0xb0, 0x48, 0xef, 0x93, 0xbb, 0xbd, 0xd6, 0x51, 0x73, 0xaf, 0xd3, 0xef, 0x59,
	0xf5, 0xfd, 0x5e, 0xd3, 0xb4, 0xc0, 0x5f, 0x5a, 0x02, 0xb6, 0xd9, 0x6c, 0x34, 0x5b, 0xaf, 0x9a,
	0x09, 0x78, 0x99, 0x1a, 0xe4, 0xde, 0x6e, 0x7d, 0xcf, 0x3a, 0xe8, 0xf5, 0x8e, 0xad, 0x6e, 0xaf,
	0xde, 0xeb, 0x77, 0xad, 0x46, 0x67, 0xaf, 0x59, 0xca, 0x55, 0x7e, 0x27, 0x85, 0x89, 0xf9, 0x85,
	0x98, 0x26, 0xa3, 0x6a, 0xd4, 0x1b, 0x07, 0x10, 0xf3, 0x22, 0x59, 0x39, 0x6a, 0x1e, 0xe9, 0x26,
	0x46, 0xbd, 0xdb, 0xeb, 0x98, 0xf5, 0xe7, 0x4d, 0x6d, 0x5a, 0x80, 0xa8, 0xab, 0xa8, 0x74, 0xfa,
	0xbd, 0xe3, 0x7e, 0x4f, 0xdb, 0xb3, 0x2f, 0x16, 0xf3, 0xbf, 0x96, 0xcc, 0x17, 0x8b, 0xf9, 0x7a,
	0x69, 0xb7, 0xf2, 0xf7, 0x05, 0xb2, 0x76, 0xc4, 0x3d, 0x3f, 0xbc, 0xea, 0x4b, 0x36, 0xe4, 0x87,
	0xfe, 0xf0, 0xe6, 0x8b, 0x7d, 0xe6, 0xc6, 0x8b, 0xfd, 0x8d, 0x97, 0xf4, 0x85, 0x1b, 0x2f, 0xe9,
	0x93, 0x4f, 0x13, 0xd9, 0x1b, 0x9e, 0x26, 0x16, 0x67, 0x9e, 0x26, 0x36, 0xc9, 0xb2, 0x87, 0xe3,
	0xc7, 0xcb, 0x79, 0xd6, 0xd4, 0x2d, 0xb8, 0x71, 0x5c, 0x38, 0x61, 0x14, 0xab, 0x0d, 0x02, 0xfc,
	0x39, 0xf4, 0x17, 0xb5, 0x55, 0x7d, 0x34, 0xa5, 0x64, 0x31, 0xbd, 0x39, 0x65, 0x4d, 0xfc, 0x5f,
	0xf9, 0x5b, 0x86, 0x90, 0x2e, 0xbb, 0x80, 0x60, 0x98, 0xfc, 0x9c, 0x3e, 0x21, 0x79, 0xdc, 0x21,
	0x5d, 0x7f, 0x68, 0x64, 0xca, 0xd9, 0x6a, 0xa1, 0xb6, 0x79, 0xfd, 0x8a, 0x34, 0x73, 0x5c, 0xbf,
	0xb3, 0x3c, 0x27, 0x25, 0xd5, 0xa9, 0x15, 0x43, 0x54, 0x91, 0xba, 0x80, 0xd4, 0xed, 0x19, 0xea,
	0x74, 0xec, 0xcd, 0x35, 0x6f, 0xaa, 0x5d, 0x29, 0x92, 0x42, 0x3a, 0x12, 0x19, 0x54, 0xfe, 0xb7,
	0x40, 0x8a, 0xed, 0xd8, 0x3b, 0xe1, 0x61, 0x37, 0xf6, 0x3c, 0x16, 0x5e, 0x51, 0x83, 0xe4, 0x24,
	0xf3, 0x02, 0xb8, 0xd3, 0x64, 0xf0, 0x13, 0x92, 0x26, 0x78, 0xd8, 0x05, 0x0f, 0xd9, 0x30, 0x79,
	0xf2, 0x48, 0x9a, 0xe0, 0xf1, 0x1c, 0xe1, 0x78, 0xb1, 0x67, 0x10, 0xe5, 0xd1, 0x4d, 0x75, 0x75,
	0x0d, 0x6d, 0x58, 0xe7, 0x2e, 0xb7, 0x6a, 0x46, 0x21, 0xb9, 0xba, 0x26, 0xb6, 0xda, 0x0c, 0xe4,
	0x99, 0xb1, 0x3a, 0x0b, 0x79, 0x06, 0xa1, 0x77, 0xfd, 0x4b, 0x1e, 0x5a, 0xe7, 0x31, 0x43, 0x93,
	0x51, 0x54, 0xb5, 0x0f, 0x5a, 0x7f, 0xd5, 0x46, 0x35, 0x73, 0x03, 0x87, 0x09, 0x63, 0x4d, 0x3d,
	0x02, 0xa9, 0x16, 0xd0, 0xe3, 0x20, 0x98, 0xa4, 0xaf, 0x2b, 0x3a, 0x5a, 0x53, 0xfa, 0xfb, 0xa4,
	0x38, 0x39, 0x90, 0x27, 0x46, 0x49, 0x1d, 0x12, 0x13, 0x23, 0x79, 0x32, 0x0b, 0xfa, 0xce, 0xb8,
	0x33, 0x07, 0xfa, 0x0e, 0xe3, 0xc1, 0x46, 0x18, 0x0f, 0xaa, 0xe3, 0xa1, 0x9a, 0x95, 0x7f, 0x2d,
	0x91, 0x82, 0x9e, 0x5c, 0x38, 0x5c, 0xe9, 0xcf, 0x33, 0x25, 0x53, 0x06, 0xdf, 0x03, 0xde, 0x9d,
	0x99, 0xd3, 0xa9, 0x19, 0x9a, 0x2e, 0xa8, 0x7e, 0xbb, 0xf1, 0xe2, 0xbf, 0x7a, 0x0b, 0xb9, 0xb7,
	0x3e, 0x0b, 0xf4, 0xde, 0xfe, 0x2c, 0xb0, 0x70, 0x0b, 0xdd, 0xb7, 0x3c, 0x1a, 0x1c, 0xbf, 0xed,
	0x0e, 0x9c, 0xbd, 0x85, 0xe6, 0xb5, 0x37, 0xe4, 0x5f, 0x66, 0xef, 0x58, 0x8b, 0xb7, 0x09, 0xe2,
	0xe4, 0x0d, 0xec, 0xc5, 0xb5, 0xa5, 0x78, 0xee, 0x16, 0x32, 0xf3, 0x85, 0xfa, 0x8b, 0x6b, 0x2b,
	0x93, 0xfc, 0x6d, 0xb4, 0xe6, 0xea, 0x96, 0xdd, 0xb9, 0xba, 0x65, 0xe5, 0x16, 0x3a, 0xd3, 0x55,
	0xcd, 0x54, 0x7d, 0x40, 0x70, 0x45, 0x8f, 0xeb, 0x83, 0xe9, 0x83, 0xbd, 0x80, 0xde, 0xf1, 0xc1,
	0x5e, 0xf9, 0xc7, 0x02, 0x29, 0x4c, 0x3c, 0x9a, 0xd1, 0x12, 0xc9, 0x7a, 0xde, 0x08, 0x93, 0x34,
	0x6f, 0xc2, 0x5f, 0xb0, 0x48, 0xa9, 0xf2, 0x21, 0x6f, 0xc2, 0x5f, 0xd8, 0xff, 0xa4, 0xe4, 0x35,
	0x9c, 0xce, 0xbc, 0x89, 0xff, 0xb5, 0xed, 0x29, 0x4e, 0x8c, 0xb2, 0x3d, 0xa5, 0xf7, 0xc8, 0x92,
	0x94, 0xfc, 0xab, 0x27, 0xb8, 0xcb, 0xe6, 0x4d, 0xd5, 0x48, 0xac, 0x35, 0xdc, 0x3e, 0xb5, 0xb5,
	0x06, 0x0b, 0x3b, 0xf0, 0x03, 0x5b, 0x44, 0x38, 0x27, 0x79, 0x53, 0xb7, 0xf0, 0xa1, 0xf5, 0x62,
	0x84, 0xc1, 0xcd, 0x9b, 0xf0, 0x17, 0x7a, 0x62, 0x17, 0xa3, 0x1a, 0xc6, 0x29, 0x6f, 0xe2, 0x7f,
	0xd0, 0x64, 0x5c, 0x0a, 0x07, 0xbf, 0x3e, 0x6f, 0xaa, 0x06, 0xfd, 0x91, 0x3c, 0x14, 0xbe, 0xb0,
	0x64, 0xe4, 0x07, 0x18, 0x5a, 0x38, 0x93, 0xbc, 0xc0, 0xb2, 0xfd, 0x58, 0x44, 0x5c, 0xc5, 0x22,
	0x6f, 0xde, 0x17, 0xbe, 0xe8, 0x46, 0x7e, 0x00, 0x91, 0xec, 0x82, 0xbf, 0xa1, 0xdc, 0x95, 0xff,
	0x2e, 0x90, 0x65, 0xf5, 0x4a, 0x47, 0x7f, 0x21, 0xc4, 0x75, 0x44, 0x3c, 0x52, 0x0f, 0x7a, 0x6a,
	0x01, 0xff, 0xe9, 0xda, 0x07, 0xbd, 0x9d, 0x43, 0xc0, 0xc1, 0xbf, 0x83, 0x77, 0xcc, 0x15, 0x37,
	0x69, 0xd0, 0xef, 0x49, 0xfe, 0xd2, 0x11, 0x8a, 0xaf, 0x56, 0xd6, 0xf6, 0xf5, 0xfc, 0xd7, 0x8e,
	0xd0, 0xec, 0xdc, 0xa5, 0xfa, 0x0b, 0x5c, 0x8f, 0xd9, 0x8a, 0x9b, 0xbd, 0x89, 0x7b, 0xc4, 0xec,
	0x84, 0xeb, 0xa9, 0xbf, 0x5b, 0x5f, 0x93, 0x95, 0x74, 0x44, 0x50, 0x71, 0x0e, 0x45, 0x6c, 0xb9,
	0xce, 0x89, 0x9d, 0x3e, 0x2e, 0x67, 0x54, 0xed, 0x3d, 0x14, 0xf1, 0xa1, 0x73, 0x62, 0xeb, 0x5b,
	0xcd, 0xd6, 0x0a, 0xc9, 0xe9, 0x81, 0x6c, 0xfd, 0x48, 0x72, 0x5a, 0x97, 0x3e, 0x21, 0x1b, 0x30,
	0x10, 0x5f, 0x8e, 0x2c, 0xcf, 0x11, 0x7e, 0x38, 0x25, 0xb2, 0x64, 0x52, 0x8f, 0xd9, 0x1d, 0x39,
	0x3a, 0x02, 0x97, 0x16, 0xda, 0x5d, 0x27, 0x45, 0xfd, 0x0e, 0x6a, 0xf9, 0x82, 0xfb, 0xa7, 0xff,
	0x0f, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x62, 0xd5, 0x35, 0x7d, 0x18, 0x00, 0x00,
}
