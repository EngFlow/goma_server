// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth/authdb.proto

package auth

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CheckMembershipReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Group                string   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckMembershipReq) Reset()         { *m = CheckMembershipReq{} }
func (m *CheckMembershipReq) String() string { return proto.CompactTextString(m) }
func (*CheckMembershipReq) ProtoMessage()    {}
func (*CheckMembershipReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_555942e2cbf784d7, []int{0}
}

func (m *CheckMembershipReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMembershipReq.Unmarshal(m, b)
}
func (m *CheckMembershipReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMembershipReq.Marshal(b, m, deterministic)
}
func (m *CheckMembershipReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMembershipReq.Merge(m, src)
}
func (m *CheckMembershipReq) XXX_Size() int {
	return xxx_messageInfo_CheckMembershipReq.Size(m)
}
func (m *CheckMembershipReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMembershipReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMembershipReq proto.InternalMessageInfo

func (m *CheckMembershipReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CheckMembershipReq) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

type CheckMembershipResp struct {
	IsMember             bool     `protobuf:"varint,1,opt,name=is_member,json=isMember,proto3" json:"is_member,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckMembershipResp) Reset()         { *m = CheckMembershipResp{} }
func (m *CheckMembershipResp) String() string { return proto.CompactTextString(m) }
func (*CheckMembershipResp) ProtoMessage()    {}
func (*CheckMembershipResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_555942e2cbf784d7, []int{1}
}

func (m *CheckMembershipResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckMembershipResp.Unmarshal(m, b)
}
func (m *CheckMembershipResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckMembershipResp.Marshal(b, m, deterministic)
}
func (m *CheckMembershipResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckMembershipResp.Merge(m, src)
}
func (m *CheckMembershipResp) XXX_Size() int {
	return xxx_messageInfo_CheckMembershipResp.Size(m)
}
func (m *CheckMembershipResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckMembershipResp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckMembershipResp proto.InternalMessageInfo

func (m *CheckMembershipResp) GetIsMember() bool {
	if m != nil {
		return m.IsMember
	}
	return false
}

func init() {
	proto.RegisterType((*CheckMembershipReq)(nil), "auth.CheckMembershipReq")
	proto.RegisterType((*CheckMembershipResp)(nil), "auth.CheckMembershipResp")
}

func init() { proto.RegisterFile("auth/authdb.proto", fileDescriptor_555942e2cbf784d7) }

var fileDescriptor_555942e2cbf784d7 = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x2c, 0x2d, 0xc9,
	0xd0, 0x07, 0x11, 0x29, 0x49, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0x9e, 0x92,
	0x03, 0x97, 0x90, 0x73, 0x46, 0x6a, 0x72, 0xb6, 0x6f, 0x6a, 0x6e, 0x52, 0x6a, 0x51, 0x71, 0x46,
	0x66, 0x41, 0x50, 0x6a, 0xa1, 0x90, 0x08, 0x17, 0x6b, 0x6a, 0x6e, 0x62, 0x66, 0x8e, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0x03, 0x12, 0x4d, 0x2f, 0xca, 0x2f, 0x2d, 0x90, 0x60, 0x82,
	0x88, 0x82, 0x39, 0x4a, 0x46, 0x5c, 0xc2, 0x18, 0x26, 0x14, 0x17, 0x08, 0x49, 0x73, 0x71, 0x66,
	0x16, 0xc7, 0xe7, 0x82, 0x05, 0xc1, 0xc6, 0x70, 0x04, 0x71, 0x64, 0x16, 0x43, 0x14, 0x25, 0xb1,
	0x81, 0x9d, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x20, 0xad, 0x10, 0x95, 0x97, 0x00, 0x00,
	0x00,
}
